WHITESPACE = _{ (" "|NEWLINE|"\t") }
semi = { ";"}
char_lit = { ANY }
char = { mutable? ~ "char" ~ ident ~ "="? ~ "'" ~ char_lit? ~ "'" ~ semi}
raw_string = { (!("\\" | "\"") ~ ANY)+ }

hex = _{ '0'..'9' | 'a'..'f' | 'A'..'F' }

unicode_hex = { hex{1, 6} }

predefined = { "n" | "r" | "t" | "\\" | "0" | "\"" | "'" }

byte       = { "x" ~ hex{2} }

unicode    = { "u" ~ "{" ~ unicode_hex ~ "}" }

escape     = { "\\" ~ (predefined | byte | unicode) }

string_lit = { "\"" ~ (raw_string | escape)* ~ "\"" }

ident = {ASCII_ALPHA+}

string = { mutable? ~ "String" ~ ident ~ "="? ~ string_lit? ~ semi}

true_lit = { "true" }

false_lit = { "false" }

bool = { mutable? ~ "Bool" ~ ident ~ "="? ~ (true_lit|false_lit)? ~ semi}

int_lit = @{ "-"? ~ ASCII_DIGIT+ }
int = { mutable? ~ "Int" ~ ident ~ "="? ~ int_lit? ~ semi}

float_lit = @{ "-"? ~ ASCII_DIGIT+ ~ "."? ~ ASCII_DIGIT+? }
float = { mutable? ~ "Float" ~ ident ~ "="? ~ float_lit? ~ semi }

uint_lit = @{ ASCII_DIGIT+}
uint = { mutable? ~ "uint" ~ ident ~ "="? ~ uint_lit? ~ semi } // lowercase names for most basic versions of types

leftparen= {"("}
rightparen= {")"}
args = { "(" ~ expression* ~ ")" }
leftbrack = {"{"}
rightbrack = {"}"}
entrypoint = { "!!" }
mutable = { "mut" }
function = {"func" ~ ident ~ entrypoint? ~ args ~ leftbrack ~ expression* ~ rightbrack  }
expression = { (char|string|bool|int|float|uint|function) }
program = {expression+}

